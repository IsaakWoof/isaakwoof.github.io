{"ast":null,"code":"/*!\n  * Bootstrap dropdown.js v5.0.1 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@popperjs/core'), require('./dom/selector-engine.js'), require('./dom/data.js'), require('./dom/event-handler.js'), require('./dom/manipulator.js'), require('./base-component.js')) : typeof define === 'function' && define.amd ? define(['@popperjs/core', './dom/selector-engine', './dom/data', './dom/event-handler', './dom/manipulator', './base-component'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Dropdown = factory(global.Popper, global.SelectorEngine, global.Data, global.EventHandler, global.Manipulator, global.Base));\n})(this, function (Popper, SelectorEngine, Data, EventHandler, Manipulator, BaseComponent) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n\n    n['default'] = e;\n    return Object.freeze(n);\n  }\n\n  var Popper__namespace = /*#__PURE__*/_interopNamespace(Popper);\n\n  var SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  var Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n\n  var BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n\n  const toType = obj => {\n    if (obj === null || obj === undefined) {\n      return `${obj}`;\n    }\n\n    return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n\n  const getSelector = element => {\n    let selector = element.getAttribute('data-bs-target');\n\n    if (!selector || selector === '#') {\n      let hrefAttr = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,\n      // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n      // `document.querySelector` will rightfully complain it is invalid.\n      // See https://github.com/twbs/bootstrap/issues/32273\n\n      if (!hrefAttr || !hrefAttr.includes('#') && !hrefAttr.startsWith('.')) {\n        return null;\n      } // Just in case some CMS puts out a full URL with the anchor appended\n\n\n      if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n        hrefAttr = `#${hrefAttr.split('#')[1]}`;\n      }\n\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;\n    }\n\n    return selector;\n  };\n\n  const getElementFromSelector = element => {\n    const selector = getSelector(element);\n    return selector ? document.querySelector(selector) : null;\n  };\n\n  const isElement = obj => {\n    if (!obj || typeof obj !== 'object') {\n      return false;\n    }\n\n    if (typeof obj.jquery !== 'undefined') {\n      obj = obj[0];\n    }\n\n    return typeof obj.nodeType !== 'undefined';\n  };\n\n  const getElement = obj => {\n    if (isElement(obj)) {\n      // it's a jQuery object or a node element\n      return obj.jquery ? obj[0] : obj;\n    }\n\n    if (typeof obj === 'string' && obj.length > 0) {\n      return SelectorEngine__default['default'].findOne(obj);\n    }\n\n    return null;\n  };\n\n  const typeCheckConfig = (componentName, config, configTypes) => {\n    Object.keys(configTypes).forEach(property => {\n      const expectedTypes = configTypes[property];\n      const value = config[property];\n      const valueType = value && isElement(value) ? 'element' : toType(value);\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(`${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n      }\n    });\n  };\n\n  const isVisible = element => {\n    if (!element) {\n      return false;\n    }\n\n    if (element.style && element.parentNode && element.parentNode.style) {\n      const elementStyle = getComputedStyle(element);\n      const parentNodeStyle = getComputedStyle(element.parentNode);\n      return elementStyle.display !== 'none' && parentNodeStyle.display !== 'none' && elementStyle.visibility !== 'hidden';\n    }\n\n    return false;\n  };\n\n  const isDisabled = element => {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n      return true;\n    }\n\n    if (element.classList.contains('disabled')) {\n      return true;\n    }\n\n    if (typeof element.disabled !== 'undefined') {\n      return element.disabled;\n    }\n\n    return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n  };\n\n  const noop = () => {};\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', callback);\n    } else {\n      callback();\n    }\n  };\n\n  const isRTL = () => document.documentElement.dir === 'rtl';\n\n  const defineJQueryPlugin = plugin => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        const name = plugin.NAME;\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.1): dropdown.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n\n  const NAME = 'dropdown';\n  const DATA_KEY = 'bs.dropdown';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const ESCAPE_KEY = 'Escape';\n  const SPACE_KEY = 'Space';\n  const TAB_KEY = 'Tab';\n  const ARROW_UP_KEY = 'ArrowUp';\n  const ARROW_DOWN_KEY = 'ArrowDown';\n  const RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\n\n  const REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY}`);\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_CLICK = `click${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`;\n  const EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`;\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_DROPUP = 'dropup';\n  const CLASS_NAME_DROPEND = 'dropend';\n  const CLASS_NAME_DROPSTART = 'dropstart';\n  const CLASS_NAME_NAVBAR = 'navbar';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]';\n  const SELECTOR_MENU = '.dropdown-menu';\n  const SELECTOR_NAVBAR_NAV = '.navbar-nav';\n  const SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\n  const PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';\n  const PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';\n  const PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';\n  const PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';\n  const PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';\n  const PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';\n  const Default = {\n    offset: [0, 2],\n    boundary: 'clippingParents',\n    reference: 'toggle',\n    display: 'dynamic',\n    popperConfig: null,\n    autoClose: true\n  };\n  const DefaultType = {\n    offset: '(array|string|function)',\n    boundary: '(string|element)',\n    reference: '(string|element|object)',\n    display: 'string',\n    popperConfig: '(null|object|function)',\n    autoClose: '(boolean|string)'\n  };\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Dropdown extends BaseComponent__default['default'] {\n    constructor(element, config) {\n      super(element);\n      this._popper = null;\n      this._config = this._getConfig(config);\n      this._menu = this._getMenuElement();\n      this._inNavbar = this._detectNavbar();\n\n      this._addEventListeners();\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    toggle() {\n      if (isDisabled(this._element)) {\n        return;\n      }\n\n      const isActive = this._element.classList.contains(CLASS_NAME_SHOW);\n\n      if (isActive) {\n        this.hide();\n        return;\n      }\n\n      this.show();\n    }\n\n    show() {\n      if (isDisabled(this._element) || this._menu.classList.contains(CLASS_NAME_SHOW)) {\n        return;\n      }\n\n      const parent = Dropdown.getParentFromElement(this._element);\n      const relatedTarget = {\n        relatedTarget: this._element\n      };\n      const showEvent = EventHandler__default['default'].trigger(this._element, EVENT_SHOW, relatedTarget);\n\n      if (showEvent.defaultPrevented) {\n        return;\n      } // Totally disable Popper for Dropdowns in Navbar\n\n\n      if (this._inNavbar) {\n        Manipulator__default['default'].setDataAttribute(this._menu, 'popper', 'none');\n      } else {\n        if (typeof Popper__namespace === 'undefined') {\n          throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)');\n        }\n\n        let referenceElement = this._element;\n\n        if (this._config.reference === 'parent') {\n          referenceElement = parent;\n        } else if (isElement(this._config.reference)) {\n          referenceElement = getElement(this._config.reference);\n        } else if (typeof this._config.reference === 'object') {\n          referenceElement = this._config.reference;\n        }\n\n        const popperConfig = this._getPopperConfig();\n\n        const isDisplayStatic = popperConfig.modifiers.find(modifier => modifier.name === 'applyStyles' && modifier.enabled === false);\n        this._popper = Popper__namespace.createPopper(referenceElement, this._menu, popperConfig);\n\n        if (isDisplayStatic) {\n          Manipulator__default['default'].setDataAttribute(this._menu, 'popper', 'static');\n        }\n      } // If this is a touch-enabled device we add extra\n      // empty mouseover listeners to the body's immediate children;\n      // only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n      if ('ontouchstart' in document.documentElement && !parent.closest(SELECTOR_NAVBAR_NAV)) {\n        [].concat(...document.body.children).forEach(elem => EventHandler__default['default'].on(elem, 'mouseover', noop));\n      }\n\n      this._element.focus();\n\n      this._element.setAttribute('aria-expanded', true);\n\n      this._menu.classList.toggle(CLASS_NAME_SHOW);\n\n      this._element.classList.toggle(CLASS_NAME_SHOW);\n\n      EventHandler__default['default'].trigger(this._element, EVENT_SHOWN, relatedTarget);\n    }\n\n    hide() {\n      if (isDisabled(this._element) || !this._menu.classList.contains(CLASS_NAME_SHOW)) {\n        return;\n      }\n\n      const relatedTarget = {\n        relatedTarget: this._element\n      };\n\n      this._completeHide(relatedTarget);\n    }\n\n    dispose() {\n      if (this._popper) {\n        this._popper.destroy();\n      }\n\n      super.dispose();\n    }\n\n    update() {\n      this._inNavbar = this._detectNavbar();\n\n      if (this._popper) {\n        this._popper.update();\n      }\n    } // Private\n\n\n    _addEventListeners() {\n      EventHandler__default['default'].on(this._element, EVENT_CLICK, event => {\n        event.preventDefault();\n        this.toggle();\n      });\n    }\n\n    _completeHide(relatedTarget) {\n      const hideEvent = EventHandler__default['default'].trigger(this._element, EVENT_HIDE, relatedTarget);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      } // If this is a touch-enabled device we remove the extra\n      // empty mouseover listeners we added for iOS support\n\n\n      if ('ontouchstart' in document.documentElement) {\n        [].concat(...document.body.children).forEach(elem => EventHandler__default['default'].off(elem, 'mouseover', noop));\n      }\n\n      if (this._popper) {\n        this._popper.destroy();\n      }\n\n      this._menu.classList.remove(CLASS_NAME_SHOW);\n\n      this._element.classList.remove(CLASS_NAME_SHOW);\n\n      this._element.setAttribute('aria-expanded', 'false');\n\n      Manipulator__default['default'].removeDataAttribute(this._menu, 'popper');\n      EventHandler__default['default'].trigger(this._element, EVENT_HIDDEN, relatedTarget);\n    }\n\n    _getConfig(config) {\n      config = { ...this.constructor.Default,\n        ...Manipulator__default['default'].getDataAttributes(this._element),\n        ...config\n      };\n      typeCheckConfig(NAME, config, this.constructor.DefaultType);\n\n      if (typeof config.reference === 'object' && !isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {\n        // Popper virtual elements require a getBoundingClientRect method\n        throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`);\n      }\n\n      return config;\n    }\n\n    _getMenuElement() {\n      return SelectorEngine__default['default'].next(this._element, SELECTOR_MENU)[0];\n    }\n\n    _getPlacement() {\n      const parentDropdown = this._element.parentNode;\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n        return PLACEMENT_RIGHT;\n      }\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n        return PLACEMENT_LEFT;\n      } // We need to trim the value because custom properties can also include spaces\n\n\n      const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';\n\n      if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n        return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;\n      }\n\n      return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;\n    }\n\n    _detectNavbar() {\n      return this._element.closest(`.${CLASS_NAME_NAVBAR}`) !== null;\n    }\n\n    _getOffset() {\n      const {\n        offset\n      } = this._config;\n\n      if (typeof offset === 'string') {\n        return offset.split(',').map(val => Number.parseInt(val, 10));\n      }\n\n      if (typeof offset === 'function') {\n        return popperData => offset(popperData, this._element);\n      }\n\n      return offset;\n    }\n\n    _getPopperConfig() {\n      const defaultBsPopperConfig = {\n        placement: this._getPlacement(),\n        modifiers: [{\n          name: 'preventOverflow',\n          options: {\n            boundary: this._config.boundary\n          }\n        }, {\n          name: 'offset',\n          options: {\n            offset: this._getOffset()\n          }\n        }]\n      }; // Disable Popper if we have a static display\n\n      if (this._config.display === 'static') {\n        defaultBsPopperConfig.modifiers = [{\n          name: 'applyStyles',\n          enabled: false\n        }];\n      }\n\n      return { ...defaultBsPopperConfig,\n        ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n      };\n    }\n\n    _selectMenuItem(event) {\n      const items = SelectorEngine__default['default'].find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible);\n\n      if (!items.length) {\n        return;\n      }\n\n      let index = items.indexOf(event.target); // Up\n\n      if (event.key === ARROW_UP_KEY && index > 0) {\n        index--;\n      } // Down\n\n\n      if (event.key === ARROW_DOWN_KEY && index < items.length - 1) {\n        index++;\n      } // index is -1 if the first keydown is an ArrowUp\n\n\n      index = index === -1 ? 0 : index;\n      items[index].focus();\n    } // Static\n\n\n    static dropdownInterface(element, config) {\n      let data = Data__default['default'].get(element, DATA_KEY);\n\n      const _config = typeof config === 'object' ? config : null;\n\n      if (!data) {\n        data = new Dropdown(element, _config);\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config]();\n      }\n    }\n\n    static jQueryInterface(config) {\n      return this.each(function () {\n        Dropdown.dropdownInterface(this, config);\n      });\n    }\n\n    static clearMenus(event) {\n      if (event && (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY)) {\n        return;\n      }\n\n      const toggles = SelectorEngine__default['default'].find(SELECTOR_DATA_TOGGLE);\n\n      for (let i = 0, len = toggles.length; i < len; i++) {\n        const context = Data__default['default'].get(toggles[i], DATA_KEY);\n\n        if (!context || context._config.autoClose === false) {\n          continue;\n        }\n\n        if (!context._element.classList.contains(CLASS_NAME_SHOW)) {\n          continue;\n        }\n\n        const relatedTarget = {\n          relatedTarget: context._element\n        };\n\n        if (event) {\n          const composedPath = event.composedPath();\n          const isMenuTarget = composedPath.includes(context._menu);\n\n          if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {\n            continue;\n          } // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n\n\n          if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n            continue;\n          }\n\n          if (event.type === 'click') {\n            relatedTarget.clickEvent = event;\n          }\n        }\n\n        context._completeHide(relatedTarget);\n      }\n    }\n\n    static getParentFromElement(element) {\n      return getElementFromSelector(element) || element.parentNode;\n    }\n\n    static dataApiKeydownHandler(event) {\n      // If not input/textarea:\n      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n      // If input/textarea:\n      //  - If space key => not a dropdown command\n      //  - If key is other than escape\n      //    - If key is not up or down => not a dropdown command\n      //    - If trigger inside the menu => not a dropdown command\n      if (/input|textarea/i.test(event.target.tagName) ? event.key === SPACE_KEY || event.key !== ESCAPE_KEY && (event.key !== ARROW_DOWN_KEY && event.key !== ARROW_UP_KEY || event.target.closest(SELECTOR_MENU)) : !REGEXP_KEYDOWN.test(event.key)) {\n        return;\n      }\n\n      const isActive = this.classList.contains(CLASS_NAME_SHOW);\n\n      if (!isActive && event.key === ESCAPE_KEY) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (isDisabled(this)) {\n        return;\n      }\n\n      const getToggleButton = () => this.matches(SELECTOR_DATA_TOGGLE) ? this : SelectorEngine__default['default'].prev(this, SELECTOR_DATA_TOGGLE)[0];\n\n      if (event.key === ESCAPE_KEY) {\n        getToggleButton().focus();\n        Dropdown.clearMenus();\n        return;\n      }\n\n      if (!isActive && (event.key === ARROW_UP_KEY || event.key === ARROW_DOWN_KEY)) {\n        getToggleButton().click();\n        return;\n      }\n\n      if (!isActive || event.key === SPACE_KEY) {\n        Dropdown.clearMenus();\n        return;\n      }\n\n      Dropdown.getInstance(getToggleButton())._selectMenuItem(event);\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  EventHandler__default['default'].on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler);\n  EventHandler__default['default'].on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);\n  EventHandler__default['default'].on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus);\n  EventHandler__default['default'].on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);\n  EventHandler__default['default'].on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    event.preventDefault();\n    Dropdown.dropdownInterface(this);\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   * add .Dropdown to jQuery only if jQuery is present\n   */\n\n  defineJQueryPlugin(Dropdown);\n  return Dropdown;\n});","map":{"version":3,"sources":["../src/util/index.js","../src/dropdown.js"],"names":["toType","obj","getSelector","element","selector","hrefAttr","getElementFromSelector","document","isElement","getElement","SelectorEngine","typeCheckConfig","Object","property","expectedTypes","configTypes","value","config","valueType","componentName","isVisible","elementStyle","getComputedStyle","parentNodeStyle","isDisabled","Node","noop","getjQuery","jQuery","onDOMContentLoaded","callback","isRTL","defineJQueryPlugin","plugin","$","name","JQUERY_NO_CONFLICT","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","ESCAPE_KEY","SPACE_KEY","TAB_KEY","ARROW_UP_KEY","ARROW_DOWN_KEY","RIGHT_MOUSE_BUTTON","REGEXP_KEYDOWN","EVENT_HIDE","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","EVENT_CLICK","EVENT_CLICK_DATA_API","EVENT_KEYDOWN_DATA_API","EVENT_KEYUP_DATA_API","CLASS_NAME_SHOW","CLASS_NAME_DROPUP","CLASS_NAME_DROPEND","CLASS_NAME_DROPSTART","CLASS_NAME_NAVBAR","SELECTOR_DATA_TOGGLE","SELECTOR_MENU","SELECTOR_NAVBAR_NAV","SELECTOR_VISIBLE_ITEMS","PLACEMENT_TOP","PLACEMENT_TOPEND","PLACEMENT_BOTTOM","PLACEMENT_BOTTOMEND","PLACEMENT_RIGHT","PLACEMENT_LEFT","Default","offset","boundary","reference","display","popperConfig","autoClose","DefaultType","BaseComponent","constructor","toggle","isActive","show","parent","Dropdown","relatedTarget","_element","showEvent","EventHandler","Manipulator","referenceElement","isDisplayStatic","modifier","Popper","elem","hide","dispose","update","_addEventListeners","event","_completeHide","hideEvent","_getConfig","_getMenuElement","_getPlacement","parentDropdown","isEnd","_detectNavbar","_getOffset","val","Number","popperData","_getPopperConfig","defaultBsPopperConfig","placement","modifiers","options","enabled","_selectMenuItem","items","index","dropdownInterface","data","Data","_config","jQueryInterface","clearMenus","toggles","i","len","context","composedPath","isMenuTarget","getParentFromElement","dataApiKeydownHandler","getToggleButton"],"mappings":"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","sourcesContent":["import SelectorEngine from '../dom/selector-engine'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.1): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttr = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttr || (!hrefAttr.includes('#') && !hrefAttr.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n      hrefAttr = `#${hrefAttr.split('#')[1]}`\n    }\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = obj => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  if (typeof obj.jquery !== 'undefined') {\n    obj = obj[0]\n  }\n\n  return typeof obj.nodeType !== 'undefined'\n}\n\nconst getElement = obj => {\n  if (isElement(obj)) { // it's a jQuery object or a node element\n    return obj.jquery ? obj[0] : obj\n  }\n\n  if (typeof obj === 'string' && obj.length > 0) {\n    return SelectorEngine.findOne(obj)\n  }\n\n  return null\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n\n  function listener() {\n    called = true\n    element.removeEventListener(TRANSITION_END, listener)\n  }\n\n  element.addEventListener(TRANSITION_END, listener)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(element)\n    }\n  }, emulatedDuration)\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach(property => {\n    const expectedTypes = configTypes[property]\n    const value = config[property]\n    const valueType = value && isElement(value) ? 'element' : toType(value)\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new TypeError(\n        `${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n      )\n    }\n  })\n}\n\nconst isVisible = element => {\n  if (!element) {\n    return false\n  }\n\n  if (element.style && element.parentNode && element.parentNode.style) {\n    const elementStyle = getComputedStyle(element)\n    const parentNodeStyle = getComputedStyle(element.parentNode)\n\n    return elementStyle.display !== 'none' &&\n      parentNodeStyle.display !== 'none' &&\n      elementStyle.visibility !== 'hidden'\n  }\n\n  return false\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\nconst reflow = element => element.offsetHeight\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nexport {\n  getElement,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  emulateTransitionEnd,\n  typeCheckConfig,\n  isVisible,\n  isDisabled,\n  findShadowRoot,\n  noop,\n  reflow,\n  getjQuery,\n  onDOMContentLoaded,\n  isRTL,\n  defineJQueryPlugin,\n  execute\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.1): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\n\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getElementFromSelector,\n  isDisabled,\n  isElement,\n  isVisible,\n  isRTL,\n  noop,\n  typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'dropdown'\nconst DATA_KEY = 'bs.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ESCAPE_KEY = 'Escape'\nconst SPACE_KEY = 'Space'\nconst TAB_KEY = 'Tab'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst RIGHT_MOUSE_BUTTON = 2 // MouseEvent.button value for the secondary button, usually the right button\n\nconst REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY}`)\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_DROPUP = 'dropup'\nconst CLASS_NAME_DROPEND = 'dropend'\nconst CLASS_NAME_DROPSTART = 'dropstart'\nconst CLASS_NAME_NAVBAR = 'navbar'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]'\nconst SELECTOR_MENU = '.dropdown-menu'\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav'\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start'\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end'\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start'\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end'\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start'\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start'\n\nconst Default = {\n  offset: [0, 2],\n  boundary: 'clippingParents',\n  reference: 'toggle',\n  display: 'dynamic',\n  popperConfig: null,\n  autoClose: true\n}\n\nconst DefaultType = {\n  offset: '(array|string|function)',\n  boundary: '(string|element)',\n  reference: '(string|element|object)',\n  display: 'string',\n  popperConfig: '(null|object|function)',\n  autoClose: '(boolean|string)'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._popper = null\n    this._config = this._getConfig(config)\n    this._menu = this._getMenuElement()\n    this._inNavbar = this._detectNavbar()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    if (isDisabled(this._element)) {\n      return\n    }\n\n    const isActive = this._element.classList.contains(CLASS_NAME_SHOW)\n\n    if (isActive) {\n      this.hide()\n      return\n    }\n\n    this.show()\n  }\n\n  show() {\n    if (isDisabled(this._element) || this._menu.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const parent = Dropdown.getParentFromElement(this._element)\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, relatedTarget)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    // Totally disable Popper for Dropdowns in Navbar\n    if (this._inNavbar) {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'none')\n    } else {\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)')\n      }\n\n      let referenceElement = this._element\n\n      if (this._config.reference === 'parent') {\n        referenceElement = parent\n      } else if (isElement(this._config.reference)) {\n        referenceElement = getElement(this._config.reference)\n      } else if (typeof this._config.reference === 'object') {\n        referenceElement = this._config.reference\n      }\n\n      const popperConfig = this._getPopperConfig()\n      const isDisplayStatic = popperConfig.modifiers.find(modifier => modifier.name === 'applyStyles' && modifier.enabled === false)\n\n      this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig)\n\n      if (isDisplayStatic) {\n        Manipulator.setDataAttribute(this._menu, 'popper', 'static')\n      }\n    }\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement &&\n      !parent.closest(SELECTOR_NAVBAR_NAV)) {\n      [].concat(...document.body.children)\n        .forEach(elem => EventHandler.on(elem, 'mouseover', noop))\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    this._menu.classList.toggle(CLASS_NAME_SHOW)\n    this._element.classList.toggle(CLASS_NAME_SHOW)\n    EventHandler.trigger(this._element, EVENT_SHOWN, relatedTarget)\n  }\n\n  hide() {\n    if (isDisabled(this._element) || !this._menu.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    this._completeHide(relatedTarget)\n  }\n\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Private\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_CLICK, event => {\n      event.preventDefault()\n      this.toggle()\n    })\n  }\n\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE, relatedTarget)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      [].concat(...document.body.children)\n        .forEach(elem => EventHandler.off(elem, 'mouseover', noop))\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._menu.classList.remove(CLASS_NAME_SHOW)\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._element.setAttribute('aria-expanded', 'false')\n    Manipulator.removeDataAttribute(this._menu, 'popper')\n    EventHandler.trigger(this._element, EVENT_HIDDEN, relatedTarget)\n  }\n\n  _getConfig(config) {\n    config = {\n      ...this.constructor.Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...config\n    }\n\n    typeCheckConfig(NAME, config, this.constructor.DefaultType)\n\n    if (typeof config.reference === 'object' && !isElement(config.reference) &&\n      typeof config.reference.getBoundingClientRect !== 'function'\n    ) {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`)\n    }\n\n    return config\n  }\n\n  _getMenuElement() {\n    return SelectorEngine.next(this._element, SELECTOR_MENU)[0]\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._element.parentNode\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end'\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP\n    }\n\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM\n  }\n\n  _detectNavbar() {\n    return this._element.closest(`.${CLASS_NAME_NAVBAR}`) !== null\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(val => Number.parseInt(val, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    }\n\n    // Disable Popper if we have a static display\n    if (this._config.display === 'static') {\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n    }\n  }\n\n  _selectMenuItem(event) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible)\n\n    if (!items.length) {\n      return\n    }\n\n    let index = items.indexOf(event.target)\n\n    // Up\n    if (event.key === ARROW_UP_KEY && index > 0) {\n      index--\n    }\n\n    // Down\n    if (event.key === ARROW_DOWN_KEY && index < items.length - 1) {\n      index++\n    }\n\n    // index is -1 if the first keydown is an ArrowUp\n    index = index === -1 ? 0 : index\n\n    items[index].focus()\n  }\n\n  // Static\n\n  static dropdownInterface(element, config) {\n    let data = Data.get(element, DATA_KEY)\n    const _config = typeof config === 'object' ? config : null\n\n    if (!data) {\n      data = new Dropdown(element, _config)\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Dropdown.dropdownInterface(this, config)\n    })\n  }\n\n  static clearMenus(event) {\n    if (event && (event.button === RIGHT_MOUSE_BUTTON || (event.type === 'keyup' && event.key !== TAB_KEY))) {\n      return\n    }\n\n    const toggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      const context = Data.get(toggles[i], DATA_KEY)\n      if (!context || context._config.autoClose === false) {\n        continue\n      }\n\n      if (!context._element.classList.contains(CLASS_NAME_SHOW)) {\n        continue\n      }\n\n      const relatedTarget = {\n        relatedTarget: context._element\n      }\n\n      if (event) {\n        const composedPath = event.composedPath()\n        const isMenuTarget = composedPath.includes(context._menu)\n        if (\n          composedPath.includes(context._element) ||\n          (context._config.autoClose === 'inside' && !isMenuTarget) ||\n          (context._config.autoClose === 'outside' && isMenuTarget)\n        ) {\n          continue\n        }\n\n        // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n        if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === TAB_KEY) || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n          continue\n        }\n\n        if (event.type === 'click') {\n          relatedTarget.clickEvent = event\n        }\n      }\n\n      context._completeHide(relatedTarget)\n    }\n  }\n\n  static getParentFromElement(element) {\n    return getElementFromSelector(element) || element.parentNode\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not input/textarea:\n    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n    // If input/textarea:\n    //  - If space key => not a dropdown command\n    //  - If key is other than escape\n    //    - If key is not up or down => not a dropdown command\n    //    - If trigger inside the menu => not a dropdown command\n    if (/input|textarea/i.test(event.target.tagName) ?\n      event.key === SPACE_KEY || (event.key !== ESCAPE_KEY &&\n      ((event.key !== ARROW_DOWN_KEY && event.key !== ARROW_UP_KEY) ||\n        event.target.closest(SELECTOR_MENU))) :\n      !REGEXP_KEYDOWN.test(event.key)) {\n      return\n    }\n\n    const isActive = this.classList.contains(CLASS_NAME_SHOW)\n\n    if (!isActive && event.key === ESCAPE_KEY) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const getToggleButton = () => this.matches(SELECTOR_DATA_TOGGLE) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE)[0]\n\n    if (event.key === ESCAPE_KEY) {\n      getToggleButton().focus()\n      Dropdown.clearMenus()\n      return\n    }\n\n    if (!isActive && (event.key === ARROW_UP_KEY || event.key === ARROW_DOWN_KEY)) {\n      getToggleButton().click()\n      return\n    }\n\n    if (!isActive || event.key === SPACE_KEY) {\n      Dropdown.clearMenus()\n      return\n    }\n\n    Dropdown.getInstance(getToggleButton())._selectMenuItem(event)\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault()\n  Dropdown.dropdownInterface(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Dropdown to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Dropdown)\n\nexport default Dropdown\n"]},"metadata":{},"sourceType":"script"}